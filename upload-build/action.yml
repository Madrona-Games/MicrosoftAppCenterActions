name: "Microsoft App Center Actions - Build Upload"

description: "Upload builds to Microsoft App Center"

branding:
  icon: "arrow-up"
  color: "blue"

inputs:
  appName:
    description: "username followed by App name e.g. wzieba/Sample-App"
    required: true
  token:
    description: "Upload token - you can get one from appcenter.ms/settings"
    required: true
  group:
    description: "Distribution group (or multiple groups split by ; delimiter)"
    required: true
  file:
    description: "Artifact to upload (.apk or .ipa)"
    required: true
  buildVersion:
    description: "Build version parameter required for .zip, .msi, .pkg and .dmg files"
  releaseNotes:
    description: "Release notes visible on release page"
  gitReleaseNotes:
    description: "Generate release notes based on the latest git commit"
  notifyTesters:
    description: "If set to true, an email notification is sent to the distribution group"
  debug:
    description: "If set to true, shows useful debug information from the action execution."
  symbolPath:
    description: "Path to the symbols file"
  symbolType:
    description: "Type of the symbols file. Can be one of: symbol, breakpad"
  androidVersionCode:
    description: "Android version code of the uploaded build"
  mappingFilePath:
    description: "Path to the mapping file"
  gitDirectory:
    description: "Path to git directory for release notes. Leave blank for current directory"
  releaseNotesHeader:
    description: "Header for release notes"

runs:
  using: "composite"
  steps:
    - uses: actions/setup-node@v3
      with:
        node-version: 16

    - name: Setup Tools
      uses: Madrona-Games/os-specific-run@v1
      with:
        macos: sudo npm install --location=global appcenter-cli
        linux: sudo npm install --location=global appcenter-cli
        windows: npm install --location=global appcenter-cli

    - name: Upload Build
      run: |
        RELEASE_NOTES=""
        isFirst=true
        releaseId=""
        export IFS=";"
        params=()
        [ "${{ inputs.notifyTesters }}" != true ] && params+=(--silent)
        [ "${{ inputs.debug }}" == true ] && params+=(--debug)

        if [ -n "${{ inputs.gitDirectory }}" ]; then
            pushd "${{ inputs.gitDirectory }}"
        fi

        if [ -n "${{ inputs.releaseNotes }}" ]; then
            RELEASE_NOTES="${{ inputs.releaseNotes }}"
        elif [ "${{ inputs.gitReleaseNotes }}" ]; then
            RELEASE_NOTES="$(git log -1 --format="${{ inputs.releaseNotesHeader }}%nCommit: %H%nRelease Notes%n%n    %s%n%n%w(0,4,4)%b" | sed 's/^    /        /g')"
        fi

        if [ -n "${{ inputs.gitDirectory }}" ]; then
            popd
        fi

        if [ -n "${{ inputs.buildVersion }}" ]; then
            params+=(--build-version "${{ inputs.buildVersion }}")
        fi

        if [ -n "${{ inputs.androidVersionCode }}" ]; then
            params+=(--build-number "${{ inputs.androidVersionCode }}")
        fi

        for group in ${{ inputs.group }}; do
            # Check if we have already uploaded the app and just need to add an additional distribution group
            if ${isFirst} ; then
                isFirst=false
                
                # Upload the build to App Center
                appcenter distribute release \
                --token "${{ inputs.token }}" \
                --app "${{ inputs.appName }}" \
                --group $group \
                --file "${{ inputs.file }}" \
                --release-notes "$RELEASE_NOTES" \
                "${params[@]}"
                
                # Remember the release ID for other groups we may want to distribute to
                releaseId=$(appcenter distribute releases list \
                --token "${{ inputs.token }}"  \
                --app "${{ inputs.appName }}" | \
                grep ID | tr -s ' ' | cut -f2 -d ' ' | sort -n -r | head -1)

            else
                # Distribute the build to other groups
                appcenter distribute releases add-destination \
                --token "${{ inputs.token }}" \
                -d $group \
                -t group \
                -r $releaseId \
                --app "${{ inputs.appName }}" \
                "${params[@]}"
            fi
        done

        if [ "${{ inputs.symbolPath }}" ]; then
          appcenter crashes upload-symbols \
          --${{ inputs.symbolType }} "${{ inputs.symbolPath }}" \
          --token "${{ inputs.token }}" \
          --app "${{ inputs.appName }}"
        fi

        if [ "${{ inputs.mappingFilePath }}" ]; then
          appcenter crashes upload-mappings \
          --mapping "${{ inputs.mappingFilePath }}" \
          --token "${{ inputs.token }}" \
          --app "${{ inputs.appName }}" \
          --version-name "${{ inputs.buildVersion }}" \
          --version-code "${{ inputs.androidVersionCode }}"
        fi
      shell: bash
